Version 4.0 HI-TECH Software Intermediate Code
"21 ../motort.h
[; ;../motort.h: 21: typedef struct {
[s S2 `ui 1 `ui 1 ]
[n S2 . Desired Actual ]
"11
[; ;../motort.h: 11: typedef struct{
[s S1 `f 1 `f 1 `f 1 `i 1 `i 1 `uc 1 `uc 1 ]
[n S1 . kp ki kpki ek ek_1 uk uk_1 ]
"2 ../motort.c
[; ;../motort.c: 2: void Controller_Func_PI(Motor *Motorptr,Controller *Controlptr)
[v _Controller_Func_PI `(v ~T0 @X0 1 ef2`*S2`*S1 ]
"3
[; ;../motort.c: 3: {
{
[e :U _Controller_Func_PI ]
"2
[; ;../motort.c: 2: void Controller_Func_PI(Motor *Motorptr,Controller *Controlptr)
[v _Motorptr `*S2 ~T0 @X0 1 r1 ]
[v _Controlptr `*S1 ~T0 @X0 1 r2 ]
"3
[; ;../motort.c: 3: {
[f ]
"4
[; ;../motort.c: 4:     float temp = 0;
[v _temp `f ~T0 @X0 1 a ]
[e = _temp -> -> 0 `i `f ]
"6
[; ;../motort.c: 6:     Controlptr->ek_1 = Controlptr->ek;
[e = . *U _Controlptr 4 . *U _Controlptr 3 ]
"7
[; ;../motort.c: 7:     Controlptr->ek = (signed int)(Motorptr->Desired - Motorptr->Actual);
[e = . *U _Controlptr 3 -> - . *U _Motorptr 0 . *U _Motorptr 1 `i ]
"9
[; ;../motort.c: 9:     Controlptr->uk_1 = Controlptr->uk;
[e = . *U _Controlptr 6 . *U _Controlptr 5 ]
"11
[; ;../motort.c: 11:     temp = (Controlptr->kpki*Controlptr->ek)-(Controlptr->kp*Controlptr->ek_1);
[e = _temp - * . *U _Controlptr 2 -> . *U _Controlptr 3 `f * . *U _Controlptr 0 -> . *U _Controlptr 4 `f ]
"12
[; ;../motort.c: 12:     Controlptr->uk = (unsigned char) (Controlptr->uk_1 + temp);
[e = . *U _Controlptr 5 -> + -> -> . *U _Controlptr 6 `i `f _temp `uc ]
"14
[; ;../motort.c: 14:     if (Controlptr->uk > 95)
[e $ ! > -> . *U _Controlptr 5 `i -> 95 `i 4  ]
"15
[; ;../motort.c: 15:         Controlptr->uk = 95;
[e = . *U _Controlptr 5 -> -> 95 `i `uc ]
[e :U 4 ]
"16
[; ;../motort.c: 16: }
[e :UE 3 ]
}
"17
[; ;../motort.c: 17: void Controller_Func_P(Motor *Motorptr, Controller *Controlptr)
[v _Controller_Func_P `(v ~T0 @X0 1 ef2`*S2`*S1 ]
"18
[; ;../motort.c: 18: {
{
[e :U _Controller_Func_P ]
"17
[; ;../motort.c: 17: void Controller_Func_P(Motor *Motorptr, Controller *Controlptr)
[v _Motorptr `*S2 ~T0 @X0 1 r1 ]
[v _Controlptr `*S1 ~T0 @X0 1 r2 ]
"18
[; ;../motort.c: 18: {
[f ]
"22
[; ;../motort.c: 22:     if (Motorptr->Desired >= Motorptr->Actual)
[e $ ! >= . *U _Motorptr 0 . *U _Motorptr 1 6  ]
"23
[; ;../motort.c: 23:         Controlptr->ek = (signed int)( Motorptr->Desired - Motorptr->Actual);
[e = . *U _Controlptr 3 -> - . *U _Motorptr 0 . *U _Motorptr 1 `i ]
[e $U 7  ]
"24
[; ;../motort.c: 24:     else
[e :U 6 ]
"25
[; ;../motort.c: 25:         Controlptr->ek = (signed int)(Motorptr->Actual - Motorptr->Desired);
[e = . *U _Controlptr 3 -> - . *U _Motorptr 1 . *U _Motorptr 0 `i ]
[e :U 7 ]
"32
[; ;../motort.c: 32:     Controlptr->uk = (unsigned char) (Controlptr->kp*Controlptr->ek);
[e = . *U _Controlptr 5 -> * . *U _Controlptr 0 -> . *U _Controlptr 3 `f `uc ]
"33
[; ;../motort.c: 33:     if (Controlptr->uk > 95)
[e $ ! > -> . *U _Controlptr 5 `i -> 95 `i 8  ]
"34
[; ;../motort.c: 34:         Controlptr->uk = 95;
[e = . *U _Controlptr 5 -> -> 95 `i `uc ]
[e :U 8 ]
"35
[; ;../motort.c: 35: }
[e :UE 5 ]
}
